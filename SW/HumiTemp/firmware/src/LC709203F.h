#ifndef _LC709203F_H    /* Guard against multiple inclusion */
    #define _LC709203F_H

#define GAUGE_ADDRESS           0x000B
#define GAUGE_VAL_BYTES_LENGTH  2       //Size in bytes of all gauge registers
#define WR_MSG_BYTES_SIZE       4       //Size in bytes of all write messages (ADDRESS, CMD, DATA_LOW, DATA_HIGH). Is used as input to CRC8 generator func.
#define RD_MSG_BYTES_SIZE       3       //Size in bytes of all read messages generated by the gauge (DATA_LOW, DATA_HIGH, CRC8). Used in get functions. CRC8 is ignored
#define INITIAL_RSOC_REG        0x07    //Used to force the gauge to obtain a first RSOC value
#define CELL_TEMPERATURE_REG    0x08    //Stores the cell temperature. Fixed value (must be set) in I2C mode. Variable in thermistor mode. Units 0.1K->0x0BA6=25C
#define CELL_VOLTAGE_REG        0x09    //Stores the cell voltage in mV
#define APA_REG                 0x0B    //Adjustment Pack Application
#define RSOC_REG                0x0D    //Stores the RSOC in 0-100 scale
#define CHANGE_OF_PARAMETER_REG 0x12    //Stores look-up table configuration
#define OPERATIONAL_MODE_REG    0x15    //0x01 operational mode; 0x02 sleep mode
#define GAUGE_STATUS_BIT_REG    0x16    //Sets I2C or thermistor mode
#define NUMBER_OF_PARAMETER_REG 0x1A    //Stores more look-up table configuration

#define INITIAL_RSOC_VAL        0xAA55  //This value sets the Initial RSOC when written in INITIAL_RSOC_REG
#define APA_VAL                 0x004D  //Sets the APA to a specific discharge curve (other value could be 0x36)
#define CHANGE_OF_PARAMETER_VAL 0x0001  //Sets the look-up table to get a better RSOC
#define OPERATIONAL_MODE_VAL    0x0001  //Enables the device
#define GAUGE_STATUS_BIT_VAL    0x0000  //Puts device in I2C mode. (0x0001) changes it to thermistor mode
#define DEFAULT_TEMP            0x0BA6  //Default temp is 25 degrees. This value shouldnt affect gauge behaviour, but it is mandatory to fix it to some value

#define SET_OM_ERR              0x01    //Error flag when setting Operational Mode
#define SET_APA_ERR             0x02    //Error flag when setting APA
#define SET_BP_ERR              0x04    //Error flag when setting Battery Profile
#define SET_IM_ERR              0x08    //Error flag when setting I2C Mode
#define SET_TEMP_ERR            0x10    //Error flag when setting temperature

uint8_t LC709203F_Init(void);

uint16_t LC709203F_Get_Register_Value(uint8_t register_in);

bool LC709203F_Set_Register_Value(uint8_t register_in, uint8_t reg_val_LOW, uint8_t reg_val_HIGH, bool check_correct_write);

uint16_t LC709203F_Get_Operational_Mode(void);

bool LC709203F_Set_Operational_Mode(uint16_t OM_value, bool check_correct_write);

uint16_t LC709203F_Get_APA(void);

bool LC709203F_Set_APA(uint16_t OM_value, bool check_correct_write);

uint16_t LC709203F_Get_Battery_Profile(void);

bool LC709203F_Set_Battery_Profile(uint16_t OM_value, bool check_correct_write);

bool LC709203F_Set_Initial_RSOC(uint16_t OM_value);

uint16_t LC709203F_Get_I2C_Mode(void);

bool LC709203F_Set_I2C_Mode(uint16_t OM_value, bool check_correct_write);

uint16_t LC709203F_Get_Temperature(void);

bool LC709203F_Set_Temperature(uint16_t OM_value, bool check_correct_write);

uint16_t LC709203F_Get_Cell_Voltage(void);

uint16_t LC709203F_Get_RSOC(void);

#endif /* __LC709203F_H */
